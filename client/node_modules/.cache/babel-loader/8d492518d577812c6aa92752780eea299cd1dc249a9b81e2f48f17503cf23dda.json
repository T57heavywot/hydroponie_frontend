{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arthu\\\\OneDrive\\\\Bureau\\\\Ecole\\\\ETE2025\\\\pfe\\\\client\\\\src\\\\components\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './App.css';\n\n// Enregistrer les composants nécessaires pour Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [waterLevel, setWaterLevel] = useState({\n    level: 0\n  });\n  const [selectedHours, setSelectedHours] = useState(6);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Simuler la récupération des données du backend\n        const mockSensorData = generateMockData(selectedHours);\n        setSensorData(mockSensorData);\n        // Simuler la récupération du niveau d'eau\n        const mockWaterLevel = {\n          level: Math.floor(Math.random() * 100)\n        };\n        setWaterLevel(mockWaterLevel);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    // Actualiser les données toutes les 30 secondes\n    const interval = setInterval(fetchData, 30000);\n    return () => clearInterval(interval);\n  }, [selectedHours]);\n  const generateMockData = hours => {\n    const now = new Date();\n    const data = [];\n    for (let i = hours; i >= 0; i--) {\n      const timestamp = new Date(now.getTime() - i * 60 * 60 * 1000);\n      data.push({\n        timestamp: timestamp.toISOString(),\n        temperature: 20 + Math.random() * 5,\n        // Entre 20°C et 25°C\n        humidity: 40 + Math.random() * 20,\n        // Entre 40% et 60%\n        lightLevel: 500 + Math.random() * 300,\n        // Entre 500 et 800 lux\n        nutrients: {\n          nitrogen: 200 + Math.random() * 100,\n          // PPM\n          phosphorus: 50 + Math.random() * 30,\n          potassium: 150 + Math.random() * 50\n        },\n        ph: 5.5 + Math.random() * 2,\n        // Entre 5.5 et 7.5\n        ec: 1.2 + Math.random() * 0.6 // Conductivité électrique en mS/cm\n      });\n    }\n    return data;\n  };\n  const handleHoursChange = hours => {\n    setSelectedHours(hours);\n  };\n\n  // Préparer les données pour les graphiques\n  const getChartData = (dataKey, label, color) => {\n    if (!sensorData.length) return null;\n    const labels = sensorData.map(data => {\n      const date = new Date(data.timestamp);\n      return date.getHours() + ':' + (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n    });\n    return {\n      labels,\n      datasets: [{\n        label,\n        data: sensorData.map(data => {\n          // @ts-ignore\n          return typeof data[dataKey] === 'object' ? null : data[dataKey];\n        }),\n        borderColor: color,\n        backgroundColor: color + '20',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n  };\n  // Options communes pour les graphiques\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n\n  // Préparer les données pour le graphique de nutriments\n  const getNutrientsChartData = () => {\n    if (!sensorData.length) return null;\n    const labels = sensorData.map(data => {\n      const date = new Date(data.timestamp);\n      return date.getHours() + ':' + (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n    });\n    return {\n      labels,\n      datasets: [{\n        label: 'Azote (N)',\n        data: sensorData.map(data => data.nutrients.nitrogen),\n        borderColor: '#4ade80',\n        backgroundColor: '#4ade8020',\n        tension: 0.4\n      }, {\n        label: 'Phosphore (P)',\n        data: sensorData.map(data => data.nutrients.phosphorus),\n        borderColor: '#3b82f6',\n        backgroundColor: '#3b82f620',\n        tension: 0.4\n      }, {\n        label: 'Potassium (K)',\n        data: sensorData.map(data => data.nutrients.potassium),\n        borderColor: '#a855f7',\n        backgroundColor: '#a855f720',\n        tension: 0.4\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-green-600 shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto py-4 px-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"Hydroponie Basilic - Tableau de Bord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto py-8 px-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white rounded-lg shadow-md p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-700 mb-2\",\n          children: \"S\\xE9lectionner une plage horaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: [3, 6, 12, 24].map(hours => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-lg transition-all ${selectedHours === hours ? 'bg-green-500 text-white shadow-md' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n            onClick: () => handleHoursChange(hours),\n            children: [hours, \" heures\"]\n          }, hours, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800 mb-4\",\n            children: \"\\xC9volution de l'humidit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), getChartData('humidity', 'Humidité (%)', '#3b82f6') && /*#__PURE__*/_jsxDEV(Line, {\n            data: getChartData('humidity', 'Humidité (%)', '#3b82f6'),\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800 mb-4\",\n            children: \"\\xC9volution de la luminosit\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), getChartData('lightLevel', 'Luminosité (lux)', '#eab308') && /*#__PURE__*/_jsxDEV(Line, {\n            data: getChartData('lightLevel', 'Luminosité (lux)', '#eab308'),\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800 mb-4\",\n            children: \"\\xC9volution du pH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), getChartData('ph', 'pH', '#a855f7') && /*#__PURE__*/_jsxDEV(Line, {\n            data: getChartData('ph', 'pH', '#a855f7'),\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800 mb-4\",\n            children: \"\\xC9volution des nutriments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), getNutrientsChartData() && /*#__PURE__*/_jsxDEV(Line, {\n            data: getNutrientsChartData(),\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800 mb-4\",\n            children: \"Niveau d'eau\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative h-64 bg-gray-200 rounded-lg overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `absolute bottom-0 w-full transition-all duration-500 ${waterLevel.level < 20 ? 'bg-red-500' : waterLevel.level < 40 ? 'bg-orange-500' : 'bg-blue-500'}`,\n              style: {\n                height: `${waterLevel.level}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-3xl text-white drop-shadow-md\",\n                children: [waterLevel.level, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 border-l-4 border-yellow-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-yellow-800 mb-2\",\n          children: \"Note pour l'impl\\xE9mentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-yellow-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"On utilise actuellement des donn\\xE9es simul\\xE9es. Pour connecter vos capteurs r\\xE9els, on doit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc list-inside mt-2 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Modifier le backend (server.js) pour recevoir les donn\\xE9es des capteurs physiques\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Adapter le format des donn\\xE9es selon nos capteurs sp\\xE9cifiques\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ajuster les plages de valeurs et les unit\\xE9s si besoin, \\xE0 voir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"bg-gray-800 text-white py-4 mt-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA9 \", new Date().getFullYear(), \" Projet Hydroponie Basilic\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C8yW9Of7Jjk90YemIU7B5rHYhkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","sensorData","setSensorData","waterLevel","setWaterLevel","level","selectedHours","setSelectedHours","loading","setLoading","fetchData","mockSensorData","generateMockData","mockWaterLevel","Math","floor","random","error","console","interval","setInterval","clearInterval","hours","now","Date","data","i","timestamp","getTime","push","toISOString","temperature","humidity","lightLevel","nutrients","nitrogen","phosphorus","potassium","ph","ec","handleHoursChange","getChartData","dataKey","label","color","length","labels","map","date","getHours","getMinutes","datasets","borderColor","backgroundColor","tension","fill","chartOptions","responsive","plugins","legend","position","scales","y","beginAtZero","getNutrientsChartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","style","height","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/arthu/OneDrive/Bureau/Ecole/ETE2025/pfe/client/src/components/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport './App.css';\r\n\r\n// Enregistrer les composants nécessaires pour Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface SensorData {\r\n  timestamp: string;\r\n  temperature: number;\r\n  humidity: number;\r\n  lightLevel: number;\r\n  nutrients: {\r\n    nitrogen: number;\r\n    phosphorus: number;\r\n    potassium: number;\r\n  };\r\n  ph: number;\r\n  ec: number;\r\n}\r\n\r\ninterface WaterLevel {\r\n  level: number;\r\n}\r\n\r\nfunction App() {\r\n  const [sensorData, setSensorData] = useState<SensorData[]>([]);\r\n  const [waterLevel, setWaterLevel] = useState<WaterLevel>({ level: 0 });\r\n  const [selectedHours, setSelectedHours] = useState<number>(6);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Simuler la récupération des données du backend\r\n        const mockSensorData = generateMockData(selectedHours);\r\n        setSensorData(mockSensorData);\r\n        // Simuler la récupération du niveau d'eau\r\n        const mockWaterLevel = { level: Math.floor(Math.random() * 100) };\r\n        setWaterLevel(mockWaterLevel);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des données:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    // Actualiser les données toutes les 30 secondes\r\n    const interval = setInterval(fetchData, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [selectedHours]);\r\nconst generateMockData = (hours: number): SensorData[] => {\r\n    const now = new Date();\r\n    const data: SensorData[] = [];\r\n    for (let i = hours ; i >= 0; i--) {\r\n      const timestamp = new Date(now.getTime() - i * 60 * 60 * 1000);\r\n      data.push({\r\n        timestamp: timestamp.toISOString(),\r\n        temperature: 20 + Math.random() * 5, // Entre 20°C et 25°C\r\n        humidity: 40 + Math.random() * 20, // Entre 40% et 60%\r\n        lightLevel: 500 + Math.random() * 300, // Entre 500 et 800 lux\r\n        nutrients: {\r\n          nitrogen: 200 + Math.random() * 100, // PPM\r\n          phosphorus: 50 + Math.random() * 30,\r\n          potassium: 150 + Math.random() * 50\r\n        },\r\n        ph: 5.5 + Math.random() * 2, // Entre 5.5 et 7.5\r\n        ec: 1.2 + Math.random() * 0.6 // Conductivité électrique en mS/cm\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const handleHoursChange = (hours: number) => {\r\n    setSelectedHours(hours);\r\n  };\r\n\r\n  // Préparer les données pour les graphiques\r\n  const getChartData = (dataKey: keyof SensorData, label: string, color: string) => {\r\n    if (!sensorData.length) return null;\r\n\r\n    const labels = sensorData.map(data => {\r\n      const date = new Date(data.timestamp);\r\n      return date.getHours() + ':' + (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\r\n    });\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label,\r\n          data: sensorData.map(data => {\r\n            // @ts-ignore\r\n            return typeof data[dataKey] === 'object' ? null : data[dataKey];\r\n          }),\r\n          borderColor: color,\r\n          backgroundColor: color + '20',\r\n          tension: 0.4,\r\n          fill: true,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n// Options communes pour les graphiques\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  // Préparer les données pour le graphique de nutriments\r\n  const getNutrientsChartData = () => {\r\n    if (!sensorData.length) return null;\r\n\r\n    const labels = sensorData.map(data => {\r\n      const date = new Date(data.timestamp);\r\n      return date.getHours() + ':' + (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\r\n    });\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Azote (N)',\r\n          data: sensorData.map(data => data.nutrients.nitrogen),\r\n          borderColor: '#4ade80',\r\n          backgroundColor: '#4ade8020',\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          label: 'Phosphore (P)',\r\n          data: sensorData.map(data => data.nutrients.phosphorus),\r\n          borderColor: '#3b82f6',\r\n          backgroundColor: '#3b82f620',\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          label: 'Potassium (K)',\r\n          data: sensorData.map(data => data.nutrients.potassium),\r\n          borderColor: '#a855f7',\r\n          backgroundColor: '#a855f720',\r\n          tension: 0.4,\r\n        },\r\n      ],\r\n    };\r\n};\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      {/* Header */}\r\n      <header className=\"bg-green-600 shadow-md\">\r\n        <div className=\"container mx-auto py-4 px-6\">\r\n          <h1 className=\"text-2xl font-bold text-white\">\r\n            Hydroponie Basilic - Tableau de Bord\r\n          </h1>\r\n        </div>\r\n      </header>\r\n      <main className=\"container mx-auto py-8 px-6\">\r\n        {/* Time Range Selector */}\r\n        <div className=\"mb-6 bg-white rounded-lg shadow-md p-4\">\r\n          <h2 className=\"text-lg font-semibold text-gray-700 mb-2\">Sélectionner une plage horaire</h2>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {[3, 6, 12, 24].map((hours) => (\r\n              <button\r\n                key={hours}\r\n                className={`px-4 py-2 rounded-lg transition-all ${\r\n                  selectedHours === hours\r\n                    ? 'bg-green-500 text-white shadow-md'\r\n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                }`}\r\n                onClick={() => handleHoursChange(hours)}\r\n              >\r\n                {hours} heures\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Graphiques */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* Graphique d'humidité */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-5\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Évolution de l'humidité</h2>\r\n            {getChartData('humidity', 'Humidité (%)', '#3b82f6') && (\r\n              <Line\r\n                data={getChartData('humidity', 'Humidité (%)', '#3b82f6')!}\r\n                options={chartOptions}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Graphique de luminosité */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-5\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Évolution de la luminosité</h2>\r\n            {getChartData('lightLevel', 'Luminosité (lux)', '#eab308') && (\r\n              <Line\r\n                data={getChartData('lightLevel', 'Luminosité (lux)', '#eab308')!}\r\n                options={chartOptions}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Graphique de pH */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-5\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Évolution du pH</h2>\r\n            {getChartData('ph', 'pH', '#a855f7') && (\r\n              <Line\r\n                data={getChartData('ph', 'pH', '#a855f7')!}\r\n                options={chartOptions}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Graphique des nutriments */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-5\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Évolution des nutriments</h2>\r\n            {getNutrientsChartData() && (\r\n              <Line\r\n                data={getNutrientsChartData()!}\r\n                options={chartOptions}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Niveau d'eau */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-5\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Niveau d'eau</h2>\r\n            <div className=\"relative h-64 bg-gray-200 rounded-lg overflow-hidden\">\r\n              <div\r\n                className={`absolute bottom-0 w-full transition-all duration-500 ${\r\n                  waterLevel.level < 20\r\n                    ? 'bg-red-500'\r\n                    : waterLevel.level < 40\r\n                    ? 'bg-orange-500'\r\n                    : 'bg-blue-500'\r\n                }`}\r\n                style={{ height: `${waterLevel.level}%` }}\r\n              ></div>\r\n              <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                <span className=\"font-bold text-3xl text-white drop-shadow-md\">\r\n                  {waterLevel.level}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Information Box */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 border-l-4 border-yellow-400\">\r\n          <h3 className=\"text-lg font-medium text-yellow-800 mb-2\">\r\n            Note pour l'implémentation\r\n          </h3>\r\n          <div className=\"text-sm text-yellow-700\">\r\n            <p>\r\n              On utilise actuellement des données simulées. Pour\r\n              connecter vos capteurs réels, on doit:\r\n            </p>\r\n            <ul className=\"list-disc list-inside mt-2 space-y-1\">\r\n              <li>\r\n                Modifier le backend (server.js) pour recevoir les données des\r\n                capteurs physiques\r\n              </li>\r\n              <li>\r\n                Adapter le format des données selon nos capteurs spécifiques\r\n              </li>\r\n              <li>\r\n                Ajuster les plages de valeurs et les unités si besoin, à voir\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer className=\"bg-gray-800 text-white py-4 mt-8\">\r\n        <div className=\"container mx-auto px-6 text-center\">\r\n          <p>© {new Date().getFullYear()} Projet Hydroponie Basilic</p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}